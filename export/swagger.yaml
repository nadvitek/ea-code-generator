openapi: "3.0.3"
info:
  description: "This is an API for a library system."
  title: "LIBRARY_SYSTEM"
  version: "1.0.0"
tags:
  -
    name: users
    description: "Operations with Users."
  -
    name: libraries
    description: "Operations with Libraries."
  -
    name: books
    description: "Operations with Books."
paths:
  /users/{id}:
    get:
      tags:
        - users
      summary: Get User From System
      parameters: 
        -
          in: path
          name: id
          schema: 
            type: integer
            format: int64
          required: true
      responses: 
        200:
          description: "Successful operation"
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: "Invalid ID Supplied"
  /libraries/{name}:
    get:
      tags:
        - libraries
      summary: Get Library From System
      parameters: 
        -
          in: path
          name: name
          schema: 
            type: string
          required: true
        -
          in: query
          name: ApiString
          schema: 
            type: string
          required: true
      responses: 
        200:
          description: "Successful operation"
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Library'
  /users:
    post:
      tags:
        - users
      summary: Post User Into System
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses: 
        200:
          description: "Successful operation"
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /books:
    put:
      tags:
        - books
      summary: Put Book Into System
      responses: 
        200:
          description: "Successful operation"
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
components:
  schemas:
    # model/bachelor/test/library_system/1.0/LIBRARY_SYSTEM
    #     -> model/bachelor/test/library_system/1.0/Get Library From System
    #     -> model/bachelor/test/library_system/1.0/Response
    #     -> model/bachelor/test/library_system/1.0/Response 200
    #     -> model/bachelor/test/library_system/1.0/library schema/library/Library
    #     -> model/bachelor/test/library_system/1.0/library schema/book/Book
    Book:
      type: object
      properties:
        name:
          type: string
        yearOfPublishing:
          type: integer
          format: int64
      required: 
        - name
        - yearOfPublishing
    # model/bachelor/test/library_system/1.0/LIBRARY_SYSTEM
    #     -> model/bachelor/test/library_system/1.0/Get Library From System
    #     -> model/bachelor/test/library_system/1.0/Response
    #     -> model/bachelor/test/library_system/1.0/Response 200
    #     -> model/bachelor/test/library_system/1.0/library schema/library/Library
    Library:
      type: object
      properties:
        adress:
          type: string
        User:
          type: array
          items:
            $ref: '#/components/schemas/User'
        name:
          type: string
        Book:
          $ref: '#/components/schemas/Book'
      required: 
        - adress
        - User
        - name
        - Book
    # model/bachelor/test/library_system/1.0/LIBRARY_SYSTEM
    #     -> model/bachelor/test/library_system/1.0/Get User From System
    #     -> model/bachelor/test/library_system/1.0/Response
    #     -> model/bachelor/test/library_system/1.0/Response 200
    #     -> model/bachelor/test/library_system/1.0/library schema/user/User
    User:
      type: object
      properties:
        cardNumber:
          type: integer
          format: int64
        email:
          type: string
        username:
          type: string
        isStudent:
          type: boolean
        id:
          type: integer
          format: int64
      required: 
        - cardNumber
        - email
        - username
        - isStudent
        - id
